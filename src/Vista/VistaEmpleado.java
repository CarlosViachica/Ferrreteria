/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.EmpleadoControlador;
import Modelo.Cliente;
import Modelo.Empleado;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author yuri guevara
 */
public class VistaEmpleado extends javax.swing.JPanel {

    private final EmpleadoControlador empleadoControlador;
    private Integer idEmpleadoSeleccionado = null;

    /**
     * Creates new form VistaEmpleado
     */
    public VistaEmpleado() {
        initComponents();
        this.empleadoControlador = new EmpleadoControlador();
        selectorFechaContratacion.setDate(new Date());
        ((JTextField) selectorFechaContratacion.getDateEditor().getUiComponent()).setEditable(false);
        cargarDatosTabla();
    }

    private void cargarDatosTabla() {
        List<Empleado> empleados = empleadoControlador.obtenerTodosEmpleados();

        if (empleados != null) {
            DefaultTableModel model = (DefaultTableModel) tablaEmpleados.getModel();
            model.setRowCount(0);

            for (Empleado emp : empleados) {
                Object[] row = {
                    emp.getIdEmpleado(),
                    emp.getPrimerNombre(),
                    emp.getSegundoNombre(),
                    emp.getPrimerApellido(),
                    emp.getSegundoApellido(),
                    emp.getCelular(),
                    emp.getCargo(),
                    emp.getFechaContratacion()
                };
                model.addRow(row);
            }
        }
    }

    private void limpiar() {
        textPrimerNombre.setText("");
        textSegundoNombre.setText("");
        textPrimerApellido.setText("");
        textSegundoApellido.setText("");
        textCelular.setText("");
        textBuscar.setText("");
        idEmpleadoSeleccionado = null;
        selectorFechaContratacion.setDate(new Date());
        btnEliminar.setEnabled(true);
        btnGuardar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textPrimerNombre = new javax.swing.JTextField();
        textSegundoNombre = new javax.swing.JTextField();
        comboCargo = new javax.swing.JComboBox<>();
        selectorFechaContratacion = new com.toedter.calendar.JDateChooser();
        textPrimerApellido = new javax.swing.JTextField();
        textSegundoApellido = new javax.swing.JTextField();
        textCelular = new javax.swing.JTextField();
        textBuscar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        btnGenerarReporte = new javax.swing.JButton();

        jLabel1.setText("Primer nombre");

        jLabel2.setText("Segundo nombre");

        jLabel3.setText("Primer apellido");

        jLabel4.setText("Segundo apellido");

        jLabel5.setText("Celular");

        jLabel6.setText("Cargo");

        jLabel7.setText("Fecha contratacion");

        comboCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vendedor", "Cajero", "Gerente" }));

        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        jLabel8.setText("Buscar");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonLimpiar(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGuardar(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonEliminar(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonActualizar(evt);
            }
        });

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Empleado", "Nombre 1", "Nombre 2", "Apellido 1", "Apellido 2", "Celular", "Cargo", "Fecha contratacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEmpleados);

        btnGenerarReporte.setText("Generar Reportes");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(textSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(textPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(textSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectorFechaContratacion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel5)
                                .addGap(89, 89, 89)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(129, 129, 129))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(selectorFechaContratacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accionBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGuardar
        // TODO add your handling code here:
        Date fecha = this.selectorFechaContratacion.getDate();
        java.sql.Date fechaContratacion = new java.sql.Date(fecha.getTime());
        String primerNombre = textPrimerNombre.getText();
        String segundoNombre = textSegundoNombre.getText();
        String primerApellido = textPrimerApellido.getText();
        String segundoApellido = textSegundoApellido.getText();
        String celular = textCelular.getText();
        String cargo = ((String) comboCargo.getSelectedItem());

        if (!primerNombre.isEmpty() && !primerApellido.isEmpty() && !celular.isEmpty() && !cargo.isEmpty()) {
            try {
                this.empleadoControlador.crearEmpleado(primerNombre, segundoNombre, primerApellido, segundoApellido, celular, cargo, fechaContratacion);
                limpiar();
                cargarDatosTabla();
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Llene los campos requeridos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonGuardar

    private void accionBotonLimpiar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonLimpiar
        // TODO add your handling code here:
        textPrimerNombre.setText("");
        textSegundoNombre.setText("");
        textPrimerApellido.setText("");
        textSegundoApellido.setText("");
        textCelular.setText("");
        textBuscar.setText("");
        idEmpleadoSeleccionado = null;
        selectorFechaContratacion.setDate(new Date());
        btnEliminar.setEnabled(true);
        btnGuardar.setEnabled(true);
    }//GEN-LAST:event_accionBotonLimpiar

    private void accionBotonEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonEliminar
        // TODO add your handling code here:
        int filaSeleccionada = tablaEmpleados.getSelectedRow();
        if (filaSeleccionada != -1) {
            int idEmpleado = (int) tablaEmpleados.getValueAt(filaSeleccionada, 0);
            empleadoControlador.eliminarEmpleado(idEmpleado);
            cargarDatosTabla();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonEliminar

    private void accionBotonActualizar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonActualizar
        // TODO add your handling code here:
        String primerNombre = textPrimerNombre.getText();
        String segundoNombre = textSegundoNombre.getText();
        String primerApellido = textPrimerApellido.getText();
        String segundoApellido = textSegundoApellido.getText();
        String celular = textCelular.getText();
        String cargo = (String) comboCargo.getSelectedItem();
        Date fecha = this.selectorFechaContratacion.getDate();
        java.sql.Date fechaContratacion = new java.sql.Date(fecha.getTime());

        if (idEmpleadoSeleccionado != null && !primerNombre.isEmpty() && !primerApellido.isEmpty() && !celular.isEmpty()) {
            try {
                empleadoControlador.actualizarEmpleado(idEmpleadoSeleccionado, primerNombre, segundoNombre,
                        primerApellido, segundoApellido, celular, cargo, fechaContratacion);
                cargarDatosTabla();
                limpiar();
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Llene los campos obligatorios.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonActualizar

    private void tablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadosMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int filaSeleccionada = tablaEmpleados.getSelectedRow();
            if (filaSeleccionada != -1) {
                idEmpleadoSeleccionado = (int) tablaEmpleados.getValueAt(filaSeleccionada, 0);
                String primerNombre = (String) tablaEmpleados.getValueAt(filaSeleccionada, 1);
                String segundoNombre = (String) tablaEmpleados.getValueAt(filaSeleccionada, 2);
                String primerApellido = (String) tablaEmpleados.getValueAt(filaSeleccionada, 3);
                String segundoApellido = (String) tablaEmpleados.getValueAt(filaSeleccionada, 4);
                String celular = (String) tablaEmpleados.getValueAt(filaSeleccionada, 5);
                String cargo = (String) tablaEmpleados.getValueAt(filaSeleccionada, 6);
                Date fecha = (Date) tablaEmpleados.getValueAt(filaSeleccionada, 7);

                textPrimerNombre.setText(primerNombre);
                textSegundoNombre.setText(segundoNombre != null ? segundoNombre : "");
                textPrimerApellido.setText(primerApellido);
                textSegundoApellido.setText(segundoApellido != null ? segundoApellido : "");
                textCelular.setText(celular);
                comboCargo.setSelectedItem(cargo != null ? cargo : "Seleccionar");

                selectorFechaContratacion.setDate(fecha);

                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaEmpleadosMouseClicked

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped
        // TODO add your handling code here:
        String textoBusqueda = textBuscar.getText().trim().toLowerCase();
        List<Empleado> empleados = empleadoControlador.obtenerTodosEmpleados();

        DefaultTableModel modelo = (DefaultTableModel) tablaEmpleados.getModel();
        modelo.setRowCount(0);

        if (empleados != null) {
            for (Empleado emp : empleados) {
                if (!textoBusqueda.isEmpty()) {
                    if (emp.getPrimerNombre().toLowerCase().contains(textoBusqueda)
                            || (emp.getSegundoNombre() != null && emp.getSegundoNombre().toLowerCase().contains(textoBusqueda))
                            || emp.getPrimerApellido().toLowerCase().contains(textoBusqueda)
                            || (emp.getSegundoApellido() != null && emp.getSegundoApellido().toLowerCase().contains(textoBusqueda))
                            || emp.getCelular().toLowerCase().contains(textoBusqueda)
                            || emp.getCargo().toLowerCase().contains(textoBusqueda)) {

                        Object[] fila = {
                            emp.getIdEmpleado(),
                            emp.getPrimerNombre(),
                            emp.getSegundoNombre(),
                            emp.getPrimerApellido(),
                            emp.getSegundoApellido(),
                            emp.getCelular(),
                            emp.getCargo(),
                            emp.getFechaContratacion()
                        };
                        modelo.addRow(fila);
                    }
                }
            }
        }
    }//GEN-LAST:event_textBuscarKeyTyped

    private void accionbotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbotonGenerarReporte
        // TODO add your handling code here:
         try{
          FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reportes PDF", FileDialog.SAVE);
          dialogoArchivo.setFile("ReportesEmpleados.pdf");
          dialogoArchivo.setVisible(true);
          
          String ruta = dialogoArchivo.getDirectory();
        String nombreArchivo = dialogoArchivo.getFile();
        
        if (ruta == null|| nombreArchivo == null){
            JOptionPane.showMessageDialog(this, "Operacion cancelada.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String rutaCompleta = ruta + nombreArchivo;
        
        PdfWriter escritor = new PdfWriter(rutaCompleta);
        PdfDocument pdf = new PdfDocument(escritor);
        Document documento = new Document(pdf);
        
        documento.add(new Paragraph("Reportes de Empleados")
                .setTextAlignment(TextAlignment.CENTER)
                .setFontSize(20)
                .setBold());
        
        documento.add(new Paragraph("Fecha: " + new java.util.Date().toString())
                .setTextAlignment(TextAlignment.CENTER)
                .setFontSize(12));
        
        Table tabla = new Table(8);
        tabla.setWidth(UnitValue.createPercentValue(100));
        tabla.addHeaderCell("ID Empleado").setBold();
        tabla.addHeaderCell("Primer_Nombre").setBold();
        tabla.addHeaderCell("Segundo_Nombre").setBold();
        tabla.addHeaderCell("Primer_Apellido").setBold();
        tabla.addHeaderCell("Segundo_Apellido").setBold();
        tabla.addHeaderCell("Celular").setBold();
        tabla.addHeaderCell("Cargo").setBold();
        tabla.addHeaderCell("fecha_contratacion").setBold();
        
        List<Empleado> listaEmpleados = 
        empleadoControlador.obtenerTodosEmpleados();
        if (listaEmpleados != null){
            for (Empleado empleado : listaEmpleados){
                tabla.addCell(String.valueOf(empleado.getIdEmpleado()));
                tabla.addCell(empleado.getPrimerNombre());
                tabla.addCell(empleado.getSegundoNombre());
                tabla.addCell(empleado.getPrimerApellido());
                tabla.addCell(empleado.getSegundoApellido());
                tabla.addCell(empleado.getCelular());
                tabla.addCell(empleado.getCargo());
                tabla.addCell(String.valueOf(empleado.getFechaContratacion()));
            }
        }
        
        
        documento.add(tabla);
        
        documento.add(new Paragraph("Notas: Reportes generados automaticamente desde el sistema.") 
                 .setFontSize(10)
                 .setMarginTop(20));
        
        documento.close();
        JOptionPane.showMessageDialog(
                this,
                "Reporte PDF generado con éxito en:" + rutaCompleta,
                "Éxito", JOptionPane.INFORMATION_MESSAGE);
        
        
        } catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(
            this,
            "Error al generar el PDF: " + e.getMessage(),
            "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionbotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> comboCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser selectorFechaContratacion;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JTextField textBuscar;
    private javax.swing.JTextField textCelular;
    private javax.swing.JTextField textPrimerApellido;
    private javax.swing.JTextField textPrimerNombre;
    private javax.swing.JTextField textSegundoApellido;
    private javax.swing.JTextField textSegundoNombre;
    // End of variables declaration//GEN-END:variables
}
